/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tamagui;

import java.awt.Image;
import javax.swing.ImageIcon;

/**
 *
 * @author Maya
 */
public final class InventoryAccessory extends javax.swing.JFrame {
    private final InteractionScreen avatarScreen;
    /**
     * Creates new form AccessoryInventory
     * @param interactionScreen
     */
    public InventoryAccessory(InteractionScreen interactionScreen) {
        initComponents();
        addAccessories();
        this.avatarScreen = interactionScreen;
    }
 
    public void addAccessories(){
       AccessoryList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Bow", "Duck", "Glasses"};
            @Override
            public int getSize() { return strings.length; }
            @Override
            public String getElementAt(int i) { return strings[i]; }
        });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        AccessoryList = new javax.swing.JList<>();
        Equip = new javax.swing.JButton();
        AccessoryImage = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Accessories");

        AccessoryList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                AccessoryListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(AccessoryList);

        Equip.setText("Equip");
        Equip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EquipActionPerformed(evt);
            }
        });

        jLabel1.setText("Cost: 3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(Equip, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(AccessoryImage, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel1)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(AccessoryImage, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Equip)))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EquipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EquipActionPerformed
         String accessory = AccessoryList.getSelectedValue();
        if (accessory == null || accessory.isEmpty()){
            Error error = new Error();
            error.SetErrorMsg("Select the accesory for update");
            error.setVisible(true);
            return;
        }
        int availablePoints = this.avatarScreen.getPoints();
        if (availablePoints < 3) {
            Error error = new Error();
            error.SetErrorMsg("Insufficient points, complete/add task to earn point");
            error.setVisible(true);
            return;
        } else {
            this.avatarScreen.addPoints(-3);
        }
        String avatarName = this.avatarScreen.getAvatarName();
        String avatarImagePath =  "Images/Avatar/"+ accessory +"/"+avatarName+ ".png"; 
        System.out.println("Selecting avatar: "+ avatarImagePath);
        this.avatarScreen.updateAvatar(avatarImagePath, avatarName);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_EquipActionPerformed

    private void AccessoryListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_AccessoryListValueChanged
        String accessory = AccessoryList.getSelectedValue();
        String accessoryIconPath = "Images/Accessory/" + accessory + ".png";
        ImageIcon accessoryIcon = new ImageIcon(new ImageIcon(accessoryIconPath).getImage().getScaledInstance(100, 150, Image.SCALE_DEFAULT));
        AccessoryImage.setIcon(accessoryIcon); 
        AccessoryImage.setVisible(true);
    }//GEN-LAST:event_AccessoryListValueChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AccessoryImage;
    private javax.swing.JList<String> AccessoryList;
    private javax.swing.JButton Equip;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
