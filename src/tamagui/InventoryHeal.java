/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tamagui;

import java.awt.Image;
import javax.swing.ImageIcon;

/**
 *
 * @author Maya
 */
public final class InventoryHeal extends javax.swing.JFrame {
     private final TamaGuiHome home;
     private final Item[] inventory; 

    /**
     * Creates new form MedicineInventory
     * @param home
     */
    public InventoryHeal(TamaGuiHome home) {
        initComponents();
        this.home = home;
        Item [] items = {
            new Item("Mint",15,15,0),
            new Item("Lavender",25,25,0),
            new Item("Chamomile",35,35,0),
            new Item("Turmeric",45,45,0),
            new Item("Ginseng",50,60,0),
        };
        addHeal(items);
        this.inventory = items;
        BoostName.setVisible(false);
        BoostValue.setVisible(false);
        Cost.setVisible(false);
        CostValue.setVisible(false);
    }

    public void addHeal(Item[] items){

       HealList.setModel(new javax.swing.AbstractListModel<String>() {
            @Override
            public int getSize() { return items.length; }
            @Override
            public String getElementAt(int i) { return items[i].getName(); }
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Heal = new javax.swing.JPanel();
        HealPanel = new javax.swing.JScrollPane();
        HealList = new javax.swing.JList<>();
        useItem = new javax.swing.JButton();
        HealImage = new javax.swing.JLabel();
        Cost = new javax.swing.JLabel();
        CostValue = new javax.swing.JLabel();
        BoostName = new javax.swing.JLabel();
        BoostValue = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Heal Avatar");

        HealList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                HealListValueChanged(evt);
            }
        });
        HealPanel.setViewportView(HealList);

        useItem.setText("Use Item");
        useItem.setToolTipText("Heal your avatar to increase his happiness.");
        useItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useItemActionPerformed(evt);
            }
        });

        Cost.setText("Cost:");

        CostValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CostValue.setText("00");

        BoostName.setText("Happiness:");

        BoostValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BoostValue.setText("00");

        javax.swing.GroupLayout HealLayout = new javax.swing.GroupLayout(Heal);
        Heal.setLayout(HealLayout);
        HealLayout.setHorizontalGroup(
            HealLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HealLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(HealPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(HealLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HealLayout.createSequentialGroup()
                        .addComponent(BoostName, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BoostValue, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(HealImage, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(HealLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(useItem, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(HealLayout.createSequentialGroup()
                            .addComponent(Cost, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(45, 45, 45)
                            .addComponent(CostValue, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        HealLayout.setVerticalGroup(
            HealLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HealLayout.createSequentialGroup()
                .addGroup(HealLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(HealPanel)
                    .addGroup(HealLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(HealImage, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(HealLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BoostName, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BoostValue))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(HealLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Cost)
                            .addComponent(CostValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(useItem)))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Heal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Heal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HealListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_HealListValueChanged
        String heal = HealList.getSelectedValue();
        String healIconPath = "Images/Heal/" + heal + ".png";
        ImageIcon healIcon = new ImageIcon(new ImageIcon(healIconPath).getImage().getScaledInstance(120, 200, Image.SCALE_DEFAULT));
        HealImage.setIcon(healIcon); 
        HealImage.setVisible(true);
        // Find item from inventory
        Item selectedItem = this.inventory[0];
        boolean found=false;
        for (Item item : this.inventory) {
            if (heal.equals(item.getName())) {
                selectedItem =  item;
                found = true;
            }
        }
        if (found == false) {
            Error error = new Error();
            error.SetErrorMsg("Could not load inventory");
            error.setVisible(true);
            return;
        }
        CostValue.setText(String.valueOf(selectedItem.getCost()));
        BoostValue.setText("+"+String.valueOf(selectedItem.getBoost_1()));
        BoostName.setVisible(true);
        BoostValue.setVisible(true);
        Cost.setVisible(true);
        CostValue.setVisible(true);
    }//GEN-LAST:event_HealListValueChanged

    private void useItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useItemActionPerformed
      String heal = HealList.getSelectedValue();
        if (heal == null || heal.isEmpty()){
            Error error = new Error();
            error.SetErrorMsg("Select the heal");
            error.setVisible(true);
            return;
        }
        int availablePoints = this.home.getPoints();
        // Find item from inventory
        Item selectedItem = this.inventory[0];
        boolean found=false;
        for (Item item : this.inventory) {
            if (heal.equals(item.getName())) {
                selectedItem =  item;
                found = true;
            }
        }
        if (found == false) {
            Error error = new Error();
            error.SetErrorMsg("Could not load inventory");
            error.setVisible(true);
            return;
        }
        if (availablePoints < selectedItem.getCost()) {
            Error error = new Error();
            error.SetErrorMsg("Insufficient points");
            error.setVisible(true);
            return;
        } else {
            this.home.addPoints(-1*selectedItem.getCost());
        }
        this.home.updateHappiness(selectedItem.getBoost_1());
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_useItemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BoostName;
    private javax.swing.JLabel BoostValue;
    private javax.swing.JLabel Cost;
    private javax.swing.JLabel CostValue;
    private javax.swing.JPanel Heal;
    private javax.swing.JLabel HealImage;
    private javax.swing.JList<String> HealList;
    private javax.swing.JScrollPane HealPanel;
    private javax.swing.JButton useItem;
    // End of variables declaration//GEN-END:variables
}
