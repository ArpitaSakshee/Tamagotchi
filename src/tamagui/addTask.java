/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tamagui;

/**
 *
 * @author Christian
 */
public class addTask extends javax.swing.JFrame {
    private String taskName;
    private String difficulty;
    private String dueDate;
    private String dueTime;
    private String AMPM;
    private javax.swing.JDialog Error;
    
    /**
     * Creates new form addTask
     */
    public addTask() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        TaskName = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        dueTimeField = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        dueDateField = new javax.swing.JTextPane();
        AddTaskLabel = new javax.swing.JLabel();
        TaskNameLabel = new javax.swing.JLabel();
        TaskDifficultyLabel = new javax.swing.JLabel();
        CompleteByLabel = new javax.swing.JLabel();
        EasyDiff = new javax.swing.JCheckBox();
        MediumDiff = new javax.swing.JCheckBox();
        HardDiff = new javax.swing.JCheckBox();
        dueDateCheckBox = new javax.swing.JCheckBox();
        dueTimeCheckBox = new javax.swing.JCheckBox();
        AmPm = new javax.swing.JComboBox<>();
        Done = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(TaskName);

        jScrollPane3.setViewportView(dueTimeField);

        jScrollPane2.setViewportView(dueDateField);

        AddTaskLabel.setText("Add Task");

        TaskNameLabel.setText("*Task Name:");

        TaskDifficultyLabel.setText("*Choose Task Difficulty");

        CompleteByLabel.setText(" *Complete By:");

        EasyDiff.setText("Easy");

        MediumDiff.setText("Medium");

        HardDiff.setText("Hard");

        dueDateCheckBox.setText("Due Date:");

        dueTimeCheckBox.setText("Due Time:");

        AmPm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AM", "PM" }));

        Done.setText("Done");
        Done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddTaskLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TaskNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(TaskDifficultyLabel))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(MediumDiff)
                    .addComponent(HardDiff)
                    .addComponent(EasyDiff)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dueTimeCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Done)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(AmPm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dueDateCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CompleteByLabel)
                            .addComponent(jScrollPane2))))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AddTaskLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TaskNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TaskDifficultyLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EasyDiff)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MediumDiff)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HardDiff)
                .addGap(4, 4, 4)
                .addComponent(CompleteByLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dueDateCheckBox))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dueTimeCheckBox)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AmPm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Done)
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    //Done Button
    private void DoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoneActionPerformed
       
        //Sets task Name. Pops error message if field is empty
        taskName = TaskName.getText();
        if (taskName == null || taskName.isEmpty()){
            Error Error = new Error(); 
            Error.setVisible(true);
            this.dispose();
            return;
        }     
               
       //Difficulty Check 6
        else if (EasyDiff.isSelected()) {
            difficulty = "Easy";
            //can be used to display difficulty on other frames ie store a string value
            //can be used to display/add points ie.  if difficulty = easy, add 1 to point value
        } 
        else if (MediumDiff.isSelected()) {
            difficulty = "Medium";
        } 
        else if (HardDiff.isSelected()) {
            difficulty = "Hard";
        }
        else {//Error Message if none are selected
            Error Error = new Error(); 
            Error.setVisible(true);
            this.dispose();
            return;
        }
        
        //Due date/time check
        if (dueTimeCheckBox.isSelected())
            {
            dueTime = dueTimeField.getText();
            AMPM = (String)AmPm.getSelectedItem();
            this.dispose();
            return;
            }
        
        if (dueDateCheckBox.isSelected()){
            dueDate = dueDateField.getText();
          
            if (dueTimeCheckBox.isSelected())
            {
            dueTime = dueTimeField.getText();
            AMPM = (String)AmPm.getSelectedItem();
            }
        }
        else {//Error Message if neither are selectred
            Error Error = new Error(); 
            Error.setVisible(true);
            this.dispose();
            return;
        }
        
        //Task newTask = new Task()
        // Close the addTask window -- Last thing to run when "Done" is pressed.
        this.dispose();
    }//GEN-LAST:event_DoneActionPerformed

    
    
    
// Get method for taskName
public String gettaskName(){
    return taskName;
}

// Get method for difficulty
public String getDifficulty() {
    return difficulty;
}

// Get method for dueDate
public String getDueDate() {
    return dueDate;
}

// Get method for dueTime
public String getDueTime() {
    return dueTime;
}

// Get method for AMPM
public String getAMPM() {
    return AMPM;
}
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addTask().setVisible(false);
            }
            
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddTaskLabel;
    private javax.swing.JComboBox<String> AmPm;
    private javax.swing.JLabel CompleteByLabel;
    private javax.swing.JButton Done;
    private javax.swing.JCheckBox EasyDiff;
    private javax.swing.JCheckBox HardDiff;
    private javax.swing.JCheckBox MediumDiff;
    private javax.swing.JLabel TaskDifficultyLabel;
    private javax.swing.JTextPane TaskName;
    private javax.swing.JLabel TaskNameLabel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox dueDateCheckBox;
    private javax.swing.JTextPane dueDateField;
    private javax.swing.JCheckBox dueTimeCheckBox;
    private javax.swing.JTextPane dueTimeField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
